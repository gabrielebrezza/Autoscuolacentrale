<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Prenota Guide</title>
    <link rel="icon" href="/styles/img/image.png" type="image/x-icon">
    <link rel="stylesheet" href="/styles/guideBooking.css">
    <!-- icone -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <!-- calendario -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
</head>
<body>
    <header class="header">
        <img id="mobileLogo" src="/styles/img/image.png" alt="">
        <img id="desktopLogo" src="https://autoscuolacentrale.com/templates/autoscuola/images/logo_autoscuola.svg" alt="" width="500px">
        <div class="actions" style="display: flex; justify-content: space-around; gap: 10px;">
            <button class="storico" <%= storicoGuide.lessonList.length > 0 ? '' : 'disabled' %>">Storico Guide</button>
            <button class="pacchetti">Pacchetti Guide</button>
            <a style="color: red;" href="/userLogout" >LogOut</a>
        </div>
        <script>
            const storico = document.querySelector('.storico');
            storico.addEventListener('click', () => {
                document.querySelector('.storicoGuide').style.display = 'block';
            });
            const pacchetti = document.querySelector('.pacchetti');
            pacchetti.addEventListener('click', () => {
                document.getElementById('pacchettiModal').classList.add('active');
            })
            function logout() {
                browser.cookies.remove('userName');
            }
        </script> 

    </header>
    <style>
        #pacchettiModal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            opacity: 0;
            pointer-events: none;
            justify-content: center;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 9999;
            transition: .25s ease-in-out;
        }

        #pacchettiModal.active {
            opacity: 1;
            pointer-events: all;
        }

        #pacchettiModal form {
            position: relative;
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
            text-align: center;
        }

        #pacchettiModal h3 {
            margin-bottom: 10px;
            font-size: 24px;
        }

        #pacchettiModal h4 {
            margin-bottom: 20px;
            font-size: 18px;
            color: #333;
        }

        .material-symbols-outlined.closeModalBtn {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 30px;
            cursor: pointer;
            color: #333;
        }

        #pacchettiModal button {
            background-color: #4075b2;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: .25s ease-in-out;
        }

        #pacchettiModal button:hover {
            opacity: .8;
        }
    </style>
    <div id="pacchettiModal">

        <form action="/pacchetto" method="post">
            <span class="material-symbols-outlined closeModalBtn"onclick="document.getElementById('pacchettiModal').classList.remove('active');">
                cancel
            </span>
            <h3>Compra il pacchetto di 10 lezioni da 1 ora e risparmia!</h3>
            <h4>Il costo del pacchetto è di <s><%= prezzi.prezzo * 10 %></s> 370€</h4>
            <input type="hidden" name="paymentMethod" value="paypal">
            <button>Paga Con Satispay</button>
        </form>
    </div>
    <% if ((trascinamento.attivo && trascinamento.pagato) || !trascinamento.attivo) { %>
    <% if(!esami.exams[0].paid){ %>
        <h1 class="warning">Per poter prenotare le lezioni di guida devi pagare l'esame</h1>
    <% } %>
    <aside>     
            <% const esame = esami.exams; %>
            <% let toPay = 0 %>
            <% let bocciati = 0 %>
            <% let totExams = 0 %>

                <% for( let i = 0; i < esami.exams.length; i++ ) { %>
                    <% if (!esami.exams[i].paid) {
                        toPay++;
                    } %>
                    <% if (esami.exams[i].bocciato) {
                        bocciati++;
                    } %>
                    <% totExams++ %>
                <% } %>
                <% let bocciato; %>
                <% if (!esame[0].paid || (toPay <= bocciati && toPay+bocciati==totExams) ) { %> 
                    <div class="esami">
                        <nav>Prenotazione esami di guida</nav>
                        
                        <% var print = true; %>
                        <% for( let i = 0; i < esame.length; i++ ) { %>
                            <% if (i<3) { %>
                                <div class="esame">
                                    <% if(print == true){ %>
                                        <p>
                                            <%= i+1 %>° Esame:  
                                            <% if (esame[i].paid == true) { %>
                                                <% if (esame[i].bocciato == true) { %>
                                                    <% print = true %>
                                                <% } else{
                                                    print = false;
                                                }%>
                                                <strong class="pagato">PAGATO</strong>  
                                            <% } else{ %> 
                                                <% print = false %>
                                                <% bocciato = true %>
                                                <strong data-esame="<%= i %>" class="daPagare">DA PAGARE</strong>  
                                            <% } %>
                                        </p>
                                    <% } %>
                                </div>
                            <% } %>
                        <% } %>
                    </div>
                <% } %>
                <span  class="material-symbols-outlined" id="data" name="data" readonly></span>
                <div class="bacheca">
                    <nav>Bacheca</nav>
                    <div class="bachecaText">
                        <%- bachecaContent.content %>
                    </div>
                </div>
                </span>
    </aside>
    <main>
        <div class="storicoGuide" style="display: none;">
            <a href=" ">
                <span class="material-symbols-outlined">
                    cancel
                </span>
            </a>
            <h2>Storico Guide</h2>
            <table>
                <thead>
                    <tr>
                        <th>Istruttore</th>
                        <th>Giorno</th>
                        <th>Ora</th>
                        <th>Durata</th>
                        <th>Sposta</th>
                    </tr>
                </thead>
                <tbody>
                    <% for (let i = 0; i < storicoGuide.lessonList.length; i++) { %>
                        <tr>
                            <td class="first" data-label="Istruttore"><%= storicoGuide.lessonList[i].istruttore %></td>
                            <td data-label="Giorno"><%= storicoGuide.lessonList[i].giorno %></td>
                            <td data-label="Ora"><%= storicoGuide.lessonList[i].ora %></td>
                            <td data-label="Durata"><%= storicoGuide.lessonList[i].duration < 1 ? storicoGuide.lessonList[i].duration * 60 + 'min' : storicoGuide.lessonList[i].duration.toFixed(2) + 'h'%></td>
                            <% var oggi = new Date(); %>
                            <% var giornoLezione = new Date(storicoGuide.lessonList[i].giorno.split('/').reverse().join('-')); %>
                            <% var differenzaGiorni = (giornoLezione - oggi) / (1000 * 60 * 60 * 24); %>

                            <% if (differenzaGiorni >= 2 && giornoLezione > oggi) { %>
                              <td class="last" data-label="Sposta">
                                <button class="SpostaGuida" data-durata="<%= storicoGuide.lessonList[i].duration %>" data-ora="<%= storicoGuide.lessonList[i].ora %>" data-giorno="<%= storicoGuide.lessonList[i].giorno %>" data-istruttore="<%= storicoGuide.lessonList[i].istruttore %>">Sposta Guida</button>
                              </td>
                            <% } else{ %>
                                <td></td>
                            <% } %>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <% if(esame[0].paid && !bocciato){ %>
            <div class="container">
                <% for(const lezione of lezioni) { %>
                    <% const instructor = lezione.instructor; %>
                    <% if (instructor == 'Esame Guida') continue; %>

                    <% let exclude = false; %>
                    <% for( const escluso of excludeInstructor) {
                        if (escluso.instructor == instructor) {
                            exclude = true; 
                            break;
                        }
                    } %>
                    <% if (exclude) continue; %>
                
                    <% for( const bookObj of lezione.book ) { %>
                        <% let hasAvailableTime = false; %>
                        <% for(const schedule of bookObj.schedule) { 
                            if(!schedule.student){
                                hasAvailableTime = true; 
                                break;
                            }
                        } %>
                        <% if(hasAvailableTime) { %>
                            <% function reserved(reservedList){
                                for(let k = 0; k < reservedList.length; k++ ) { 
                                    if(reservedList[k] == userEmail){
                                        return true;
                                    }else if(k == reservedList.length){
                                        return false;
                                    }
                                }
                            } %>
                            <% let scheduleArr = []; %>
                            <% let booked = false; %>
                            <% let previousSchedule = false; %>
                            <% const filteredSchedules = [...bookObj.schedule].sort((a, b) => {
                                return a.hour.split('-')[0].localeCompare(b.hour.split('-')[0]);
                            }); %>
                            
                            <% for( const schedule of filteredSchedules ) {
                                //se io ho già prenotato una guida nascondo la card
                                if(schedule.student == nome){
                                    booked = true;
                                    break;
                                }
                                //guardo se la prima guida è occupata
                                if(schedule.student && !previousSchedule && !booked) booked = true;

                                //cerco la prima guida ad occupata e salvo la precedente
                                if(schedule.student && previousSchedule && !booked){
                                    booked = true;
                                    //controllo che non sia riservata
                                    if(previousSchedule.reservedTo.length != 0){
                                        //controllo se è riservata a me
                                        if(reserved(previousSchedule.reservedTo)) scheduleArr.push(previousSchedule);  
                                    }else{
                                        scheduleArr.push(previousSchedule);
                                    }
                                //cerco la prima guida libera dopo quella occupata e la salvo
                                }else if(!schedule.student && booked){
                                    //controllo che non sia riservata
                                    if(schedule.reservedTo.length != 0){
                                        //controllo se è riservata a me
                                        if(reserved(schedule.reservedTo)) scheduleArr.push(schedule);
                                    }else{
                                        scheduleArr.push(schedule);
                                    }
                                    break;
                                }
                                previousSchedule = schedule;
                            } %>
                            <%# caso in cui non ci siano ancora guide prenotate %>
                            <% if(!booked) {
                                for( const schedule of bookObj.schedule ) {
                                    //controllo che non sia riservata
                                    if(schedule.reservedTo.length != 0){
                                        //controllo se è riservata a me
                                        if(reserved(schedule.reservedTo)) scheduleArr.push(schedule);
                                    }else{
                                        scheduleArr.push(schedule);
                                    }
                                }
                            } %>
                            <% if (scheduleArr.length != 0) { %>
                                <section class="section" data-date="<%= bookObj.day %>">
                                    <h2 class="section-title"> 
                                        <span>Istruttore: <%= instructor.split(' ')[0] %></span> 
                                        <br> 
                                        Data: <%= bookObj.day %>
                                    </h2>
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Ora</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% for(lesson of scheduleArr){ %>
                                                <tr>
                                                    <td class="hour"><%= lesson.hour %></td>
                                                    <td>
                                                        <button class="book"
                                                          data-time="<%= bookObj.day %> - <%= lesson.hour %>"
                                                          data-instructor="<%= instructor %>"
                                                          data-price="<%= lesson.price %>">
                                                            Costo: <%= Number(lesson.price).toFixed(2) %>€
                                                            <br>
                                                            <strong>
                                                                PRENOTA
                                                            </strong>
                                                        </button>
                                                    </td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                </section>
                            <% } %>
                        <% } %>
                    <% } %>
                <% } %>
            </div>
        <% }%>
    </main>
    <div id="paymentModal" class="paymentModal modal" style="display: none;">
        <a href=" ">
            <span class="material-symbols-outlined">
                cancel
            </span>
        </a>
        <form id="paymentForm" method="POST">
            <input type="hidden" id="causeInput" name="cause" value="">
            <div class="form-group">
                <label for="price" id="priceLabel"></label>
                <input type="hidden" id="priceInput" name="price" value="">
                <input type="hidden" id="studentInput" name="student" value="<%= nome %>">
            </div>
            <input type="hidden" id="instructorInput" name="instructor" value="">
            <input type="hidden" id="timeInput" name="time" value="">
            <input type="hidden" name="paymentMethod" id="paymentMethod">
            <button id="payPalButton" type="button" class="btn btn-primary"><i class="fa fa-paypal"></i> Paga con PayPal</button>
            <button id="satispayButton" type="button" class="btn btn-primary"><i class="fa fa-qrcode"></i> Paga con Satispay</button>
            <label for="codicePagamento">O paga con codice</label>
            <input type="text" id="codicePagamento" name="codicePagamento"> 
            <button id="codiceButton" type="button" class="btn btn-primary">Paga con codice</button>
        </form>
                
        <script>
            const paymentForm = document.getElementById("paymentForm");
            document.getElementById("payPalButton").addEventListener("click", function() {
                paymentForm.querySelector('[name="paymentMethod"]').value = 'paypal';
                const cause = paymentForm.querySelector('[name="cause"]').value;
                if(cause == 'lesson'){
                    paymentForm.action = "/book";
                } 
                if(cause == 'exam'){
                    paymentForm.action = "/bookExam";
                }
                paymentForm.submit();
            });
            document.getElementById("satispayButton").addEventListener("click", function() {
                paymentForm.querySelector('[name="paymentMethod"]').value = 'satispay';
                const cause = paymentForm.querySelector('[name="cause"]').value;
                if(cause == 'lesson'){
                    paymentForm.action = "/book";
                } 
                if(cause == 'exam'){
                    paymentForm.action = "/bookExam";
                }
                paymentForm.submit();
            });
            document.getElementById("codiceButton").addEventListener("click", function() {
                paymentForm.querySelector('[name="paymentMethod"]').value = 'code';
                const cause = paymentForm.querySelector('[name="cause"]').value;
                if(cause == 'lesson'){
                    paymentForm.action = "/book";
                } 
                if(cause == 'exam'){
                    paymentForm.action = "/bookExam";
                }
                paymentForm.submit();
            });
        </script>
    </div>
    
    <script>
$(function() {
    $("#data").datepicker({
        dateFormat: 'dd/mm/yy',
        minDate: 0, // oggi
        beforeShowDay: function(date) {
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();
        
            // Formattazione data
            var dateString = (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year;

            var sectionExists = $('.section[data-date="' + dateString + '"]').length > 0;
            var hasReservedToOthersButNotBook = $('.section[data-date="' + dateString + '"] .reservedtoOthers').length > 0 && $('.section[data-date="' + dateString + '"] .book').length === 0;
            if (sectionExists) {
                if (hasReservedToOthersButNotBook) {
                    return [true, "redDate disabled", "Non ci sono guide libere"];
                } else {
                    return [true, "greenDate", "Ci sono guide libere"];
                }
            } else {
                return [true, "redDate disabled", "Non ci sono guide libere"];
            }
        },
        onSelect: function(dateText, inst) {
            updateSectionsVisibility(dateText);
        }
    });

    selectFirstGreenDate();
});


function selectFirstGreenDate() {
    var firstGreenDateStr = $('.greenDate > a').data("date");
    if (firstGreenDateStr) {       
        var today = (new Date()).getDate();
        if(today == firstGreenDateStr){
            $('.greenDate > a').datepicker("setDate", today);
            updateSectionsVisibility($("#data").val());
        }else{
            $("#data").datepicker("setDate", firstGreenDateStr - today);
            updateSectionsVisibility($("#data").val());
        }
    } else {
        console.log("Nessuna data greenDate trovata.");
    }
}

function updateSectionsVisibility(selectedDate) {
    var sections = document.querySelectorAll('.section');
    sections.forEach(function (section) {
        var bookElement = section.querySelector('.book');
        if (section.getAttribute('data-date') === selectedDate && bookElement) {
            section.style.display = 'block';
        } else {
            section.style.display = 'none';
        }
    });
}

    </script>
    <div id="spostaGuidaFormContainer" style="display: none;">

        <form id="spostaGuidaForm" action="/spostaGuida" method="POST">
            <a href=" ">
                <span class="material-symbols-outlined">
                    cancel
                </span>
            </a>
            <p>Per spostare la guida dovrai pagare 5€</p>
            <input type="hidden" name="student" value="<%= nome %>">
            <input type="hidden" name="oldInstructor" id="istruttoreLezioneDaSpostare" value="">
            <input type="hidden" name="oldDate" id="dataLezioneDaSpostare" value="">
            <input type="hidden" name="oldHour" id="oraLezioneDaSpostare" value="">
            <input type="hidden" name="duration" id="durataLezioneDaSpostare" value="">
            <div class="field">
                <label for="newInstructor">Istruttore:</label>
                <select name="newInstructor" id="newInstructor">
                    <% for( let i = 0; i < lezioni.length; i++ ) { %>
                        <% if(lezioni[i].instructor != 'Esame Guida' && lezioni[i].instructor != 'Developer Account'){ %>
                            <option value="<%= lezioni[i].instructor %>"><%= lezioni[i].instructor.split(' ')[0] %></option>
                        <% } %>
                    <% } %>
                </select>
            </div>
            <div class="field">
                <label for="newDate">Data:</label>
                <select name="newDate" id="newDate"></select>
            </div>
            <div class="field">
                <label for="newHour">Fascia Oraria:</label>
                <select name="newHour" id="newHour" required></select>
            </div>
            <input type="hidden" name="paymentMethod" value="paypal">
            <button id="satispayButtonspostaGuida" type="button" class="btn btn-primary"><i class="fa fa-qrcode"></i> Paga con Satispay</button>
            <button id="paypalButtonspostaGuida" type="button" class="btn btn-primary"><i class="fa fa-paypal"></i> Paga con PayPal</button>
        </form>
    </div>
    <script>
        
        

        const spostaGuidaForm = document.getElementById("spostaGuidaForm");
            document.getElementById("paypalButtonspostaGuida").addEventListener("click", function() {
                spostaGuidaForm.querySelector('[name="paymentMethod"]').value = 'paypal';
                spostaGuidaForm.submit();
            });
            document.getElementById("satispayButtonspostaGuida").addEventListener("click", function() {
                spostaGuidaForm.querySelector('[name="paymentMethod"]').value = 'satispay';
                spostaGuidaForm.submit();
            });

    </script>
    <script>
        let disponibilitaDate = [];  
        const sections = document.querySelectorAll('.section');
        sections.forEach(section => {
            const data = section.getAttribute('data-date');
            const istruttore = section.querySelector('.section-title').querySelector('span').textContent.trim().split(' ')[1];
            const fasceOrarie = section.querySelectorAll('.hour');
        
            let fasceOrarieDisponibili = [];
            fasceOrarie.forEach(ora => {
                const oraDisponibile = ora.textContent.trim();
                fasceOrarieDisponibili.push(oraDisponibile);
            });
            
            if (fasceOrarieDisponibili.length > 0) {
                disponibilitaDate.push({
                    giorno: data,
                    istruttore: istruttore,
                    fasceOrarie: fasceOrarieDisponibili
                });
            }
        });
    </script>

    <script>
        const SpostaGuidaBtn = document.querySelectorAll('.SpostaGuida');
        const spostaGuidaFormContainer = document.getElementById('spostaGuidaFormContainer');
        const istruttoreLezioneDaSpostare = document.getElementById('istruttoreLezioneDaSpostare');
        const dataLezioneDaSpostare = document.getElementById('dataLezioneDaSpostare');
        const oraLezioneDaSpostare = document.getElementById('oraLezioneDaSpostare');
        const durataLezioneDaSpostare = document.getElementById('durataLezioneDaSpostare');    
        SpostaGuidaBtn.forEach((btn) =>{
            btn.addEventListener('click', () =>{
                const durata = btn.dataset.durata;
                const ora = btn.dataset.ora;
                const giorno = btn.dataset.giorno;
                const istruttore = btn.dataset.istruttore;
                spostaGuidaFormContainer.style.display = 'block';
                istruttoreLezioneDaSpostare.value = istruttore;
                dataLezioneDaSpostare.value = giorno;
                oraLezioneDaSpostare.value = ora;
                durataLezioneDaSpostare.value = durata;
                popolaDate();
                popolaFasceOrarie();
            });
        });

        const dateSelect = document.getElementById('newDate');
            const fasceOrarieSelect = document.getElementById('newHour');
            const istruttoreSelect = document.getElementById('newInstructor');
    
            function popolaDate() {
                const istruttoreSelezionato = istruttoreSelect.value.split(' ')[0];
                dateSelect.innerHTML = "";
            
                disponibilitaDate.forEach(item => {
                    let oggi = new Date();
                    oggi.setDate(oggi.getDate() + 2);

                    let dataDopodomani = new Date(oggi.getFullYear(), oggi.getMonth(), oggi.getDate());

                    let dataItem = new Date(item.giorno.split("/").reverse().join("-"));

                    if (item.istruttore === istruttoreSelezionato && dataItem >= dataDopodomani) {
                        const option = document.createElement('option');
                        option.textContent = item.giorno;
                        dateSelect.appendChild(option);
                    }
                });
            }
    
            // Popola inizialmente le date
            
    
            function popolaFasceOrarie() {
                const istruttoreSelezionato = istruttoreSelect.value.split(' ')[0];
                const giornoSelezionato = dateSelect.value;
                
                fasceOrarieSelect.innerHTML = "";
            
                disponibilitaDate.forEach(item => {
                    if (item.istruttore === istruttoreSelezionato && item.giorno === giornoSelezionato) {
                        item.fasceOrarie.forEach(ora => {
                            const [startTime, endTime] = ora.split('-').map(t => t.trim());

                            const [startHour, startMin] = startTime.split(':').map(Number);
                            const [endHour, endMin] = endTime.split(':').map(Number);

                            let duration;
                            if (endHour > startHour || (endHour === startHour && endMin >= startMin)) {
                                duration = (endHour - startHour) * 60 + (endMin - startMin);
                            } else {
                                duration = (24 - startHour + endHour) * 60 + (endMin - startMin);
                            }
                            
                            if(duration == Math.floor((document.getElementById('durataLezioneDaSpostare').value)*60)){
                                const option = document.createElement('option');
                                option.textContent = ora;
                                fasceOrarieSelect.appendChild(option);
                            }
                        });
                    }
                });
                if(fasceOrarieSelect.hasChildNodes()){
                    document.getElementById('SubmitSpostaGuida').disabled = false;
                }else{
                    document.getElementById('SubmitSpostaGuida').disabled = true;
                }
            }
    
            // Popola inizialmente le fasce orarie
            
    
            // Aggiorna le date quando l'istruttore viene cambiato
            istruttoreSelect.addEventListener('change', popolaDate);
    
            // Aggiorna le fasce orarie quando l'istruttore viene cambiato o la data viene cambiata
            istruttoreSelect.addEventListener('change', popolaFasceOrarie);
            dateSelect.addEventListener('change', popolaFasceOrarie);
            if(fasceOrarieSelect.options.length == 0|| dateSelect.options.length == 0){
                document.getElementById('SubmitSpostaGuida').disabled = true;
            }else{
                document.getElementById('SubmitSpostaGuida').disabled = false;
            }
            

    </script>
        <script>
            
        </script>
    <script>
        const studente = '<%= nome %>';
        const paymentModal = document.getElementById('paymentModal');
        const instructorInput = document.getElementById('instructorInput');
        const timeInput = document.getElementById('timeInput');
        const priceInput = document.getElementById('priceInput');
        const priceLabel = document.getElementById('priceLabel');
        const causeInput = document.getElementById('causeInput');
        const bookButtons = document.querySelectorAll('.book');
        bookButtons.forEach(async(button) => {
            button.addEventListener("click", bookHandler);
        });

        async function  bookHandler(event) {
            const button = event.currentTarget;
            const instructor = button.dataset.instructor;
            const time = button.dataset.time;
            const price = button.dataset.price;
            causeInput.value = 'lesson';
            instructorInput.value = instructor;
            timeInput.value = time;
            priceInput.value = price;
            priceLabel.innerHTML = 'Procedi con il pagamento per la lezione di guida. <br> Il totale è di ' + price + '€';
            paymentModal.style.display = 'flex';
            setTimeout(() =>{
                paymentModal.style.opacity = 1;
            }, 100)
        }

        const examBtn = document.querySelector('.daPagare');
        if(examBtn){
            examBtn.addEventListener('click', () =>{
                causeInput.value = 'exam'; 
                priceLabel.innerHTML = 'Procedi con il pagamento dell\'esame di guida. <br> Il totale è di ' + 90 + '€';
                paymentModal.style.display = 'flex';
                setTimeout(() =>{
                    paymentModal.style.opacity = 1;
                }, 100)

            });
        }
    </script>
    <% }else{ %>
        <form id="paymentForm" class="paymentModal" style="display: block; opacity: 1;" action="/trascinamento"  method="POST">
            <p style="color: #fff;">È stato attivato il trascinamento per poter continuare a prenotare dovrai pagare 150€</p>
            <div class="form-group">
                <input type="hidden" id="causeInput" name="cause" value="trascinamento">
                <input type="hidden" id="studentInput" name="student" value="<%= nome %>">
            </div>
            <input type="hidden" name="paymentMethod" id="paymentMethod">
            <button id="payPalButton" type="button" class="btn btn-primary"><i class="fa fa-paypal"></i> Paga con PayPal</button>
            <button id="satispayButton" type="button" class="btn btn-primary"><i class="fa fa-qrcode"></i> Paga con Satispay</button>
            <label for="codicePagamento">O paga con codice</label>
            <input type="text" id="codicePagamento" name="codicePagamento"> 
            <button id="codiceButton" type="button" class="btn btn-primary">Paga con codice</button>
        </form>
        <script>
            const paymentFormTrasc = document.getElementById('paymentForm');
            document.getElementById("payPalButton").addEventListener("click", function() {
                paymentFormTrasc.querySelector('[name="paymentMethod"]').value = 'paypal';
                paymentFormTrasc.submit();
            });
            document.getElementById("satispayButton").addEventListener("click", function() {
                paymentFormTrasc.querySelector('[name="paymentMethod"]').value = 'satispay';
                paymentFormTrasc.submit();
            });
            document.getElementById("codiceButton").addEventListener("click", function() {
                paymentFormTrasc.querySelector('[name="paymentMethod"]').value = 'code';
                paymentFormTrasc.submit();
            });
        </script>
    <% } %>
</body>
</html>
