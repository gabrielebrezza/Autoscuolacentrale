<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Prenota Guide</title>
    <link rel="stylesheet" href="/styles/guideBooking.css">
    <!-- icone -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <!-- calendario -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
</head>
<body>
    <header class="header">
        <h1>logo</h1>
        <h2>Benvenuto <%= nome %></h2>
    </header>
    <aside>
            <label for="data">
                <span  class="material-symbols-outlined">
                    calendar_month
                </span>
            </label>
            <input style="opacity: 0;" type="radio" id="data" name="data" readonly>
    </aside>
    
    <div class="container">
        <% for(var i = 0; i < lezioni.length; i++) { %>
        <% let dateElaborate = []; %>
        <% for(j = 0; j < lezioni[i].book.length; j++) { %>
        <% if (!dateElaborate.includes(lezioni[i].book[j].day)) { %>
        <% dateElaborate.push(lezioni[i].book[j].day); %>
        <section class="section" data-date="<%= lezioni[i].book[j].day %>">
            <h2 class="section-title"><%= lezioni[i].instructor %> - <%= lezioni[i].book[j].day %></h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Ora</th>
                        <th>Azioni</th>
                    </tr>
                </thead>
                <tbody>
                    <% for(k = 0; k < lezioni[i].book[j].schedule.length; k++) { %>
                    <% const schedule = lezioni[i].book[j].schedule[k]; %>
                    <% if(!schedule.student) { %>
                    <tr>
                        <td class="hour"><%= schedule.hour %></td>
                        <td>
                            <button class="book" data-time="<%= lezioni[i].book[j].day %> - <%= schedule.hour %>"
                                data-instructor="<%= lezioni[i].instructor %>">Prenota</button>
                        </td>
                    </tr>
                    <% } else if (schedule.student == nome) { %>
                    <tr>
                        <td class="hour"><%= schedule.hour %></td>
                        <td>
                            <button class="removeBooking" data-time="<%= lezioni[i].book[j].day %> - <%= schedule.hour %>"
                                data-instructor="<%= lezioni[i].instructor %>">Rimuovi prenotazione</button>
                        </td>
                    </tr>
                    <% } %>
                    <% } %>
                </tbody>
            </table>
        </section>
        <% } %>
        <% } %>
        <% } %>
    </div>
    <form action="/create-payment" method="POST">
        <button type="submit">Paga con PayPal</button>
    </form>
    <script>
$(function() {
    $("#data").datepicker({
        dateFormat: 'dd/mm/yy', // Imposta il formato della data nel datepicker
        minDate: 0, // Imposta la data minima come oggi
        beforeShowDay: function(date) {
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            // Formatta la data nel formato dd/mm/yy
            var dateString = (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year;
            
            // Verifica se esiste un elemento .section con la data corrispondente
            var sectionExists = $('.section[data-date="' + dateString + '"]').length > 0;

            // Verifica se ci sono guide disponibili per quella data
            if (sectionExists) {
                return [true, "greenDate", "Ci sono guide libere"];
            } else {
                return [true, "redDate", "Non ci sono guide libere"];
            }
        },
        onSelect: function(dateText, inst) {
            var selectedDate = this.value;
            var sections = document.querySelectorAll('.section');
            sections.forEach(function (section) {
                if (section.getAttribute('data-date') === selectedDate) {
                    section.style.display = 'block';
                } else {
                    section.style.display = 'none';
                }
            });
            console.log("Data selezionata: " + dateText);
        }
    });
});




    </script>

    <script>
        const studente = '<%= nome %>';
        
        // Gestore per prenotare una lezione
        const bookButtons = document.querySelectorAll('.book');
        bookButtons.forEach((button) => {
            button.addEventListener("click", bookHandler);
        });

        function bookHandler(event) {
            const button = event.currentTarget;
            book(button);
            button.removeEventListener("click", bookHandler);
        }

        function book(button) {
            const instructor = button.dataset.instructor;
            const time = button.dataset.time;
            fetch('/book', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ instructor: instructor, time: time, student: studente })
            })
            .then(response => {
                if (response.ok) {
                    alert('Prenotazione effettuata con successo');
                } else {
                    alert('Errore durante la prenotazione');
                }
                window.location.reload();
            })
            .catch(error => {
                console.error('Errore durante la prenotazione:', error);
            });
        }

        // Gestore per cancellare una prenotazione
        const removeButtons = document.querySelectorAll('.removeBooking');
        removeButtons.forEach((button) => {
            button.addEventListener("click", removeBookHandler);
        });

        function removeBookHandler(event) {
            const button = event.currentTarget;
            removeBook(button);
            button.removeEventListener("click", removeBookHandler);
        }

        function removeBook(button) {
            const instructor = button.dataset.instructor;
            const time = button.dataset.time;
            fetch('/removebooking', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ instructor: instructor, time: time, student: studente })
            })
            .then(response => {
                if (response.ok) {
                    alert('Prenotazione rimossa con successo');
                } else {
                    alert('Errore durante la rimozione della prenotazione');
                }
                window.location.reload();
            })
            .catch(error => {
                console.error('Errore durante la rimozione della prenotazione:', error);
            });
        }
    </script>
</body>
</html>
