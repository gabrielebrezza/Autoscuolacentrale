<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/adminUsers.css">
    <title><%= title %></title>
    <!-- icone -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
</head>
<body>
    <%- include('header.ejs') %>
    <div class="headerFormsContainer">
    <div class="headerForms filterSection">
        <div class="field">
            <label for="searchName">Cerca per nome:</label>
            <input type="text" id="searchName" name="searchName">
        </div>
        <div class="field">
            <label for="searchPhone">Cerca per numero di telefono:</label>
            <input type="tel" id="searchPhone" name="searchPhone">
        </div>
        <div class="field">
            <label for="searchEmail">Cerca per Email:</label>
            <input type="email" id="searchEmail" name="searchEmail">
        </div>
        <div class="field">
            <label for="searchExams">Cerca per numero di esami:</label>
            <input type="number" id="searchExams" name="searchExams" min="0">
        </div>
        <div class="field">
            <label for="searchArchived">Archiviati:</label>
            <input type="checkbox" id="searchArchived" name="searchArchived">
        </div>
        <div class="field">
            <button id="copiaEmail" name="copiaEmail">Copia Email</button>
        </div>
    </div>
        <form class="headerForms" id="createCodeForm" action="/createCode" method="POST">
            <div class="field">
            <label for="utenti">Utenti:</label>
                <select id="utenti" name="utenti" required>
                    <% const utentiFiltrati = [] %>
                    <% for (let i = 0; i < utenti.length; i++) {
                        if(!utenti[i].archiviato){
                            const utente = {
                                email: utenti[i].email,
                                cognome: utenti[i].billingInfo[0].cognome.toLowerCase(),
                                nome: utenti[i].billingInfo[0].nome.toLowerCase()
                            } 
                            utentiFiltrati.push(utente); 
                        }
                    } %>
                    <% function ordineAlfabeticoCognome(a, b) { 
                            if (a.cognome < b.cognome) { return -1; } 
                            if (a.cognome > b.cognome) { return 1; } 
                            return 0;
                    } %>
                    <% utentiFiltrati.sort(ordineAlfabeticoCognome) %>
                    <% for (let i = 0; i < utentiFiltrati.length; i++) { %>
                        <option value="<%= utentiFiltrati[i].email %>"><%= utentiFiltrati[i].cognome %> <%= utentiFiltrati[i].nome %></option>
                    <% } %>
                </select>
            </div>
            <div class="field">
                <label for="totaleCodici">Numero di codici:</label>
                <input type="number" name="totaleCodici" id="totaleCodici" min="1">
            </div>
            <div class="field">
                <label for="durata">Durata:</label>
                <select id="durata" name="durata" required>
                        <option value="30">30 minuti</option>
                        <option value="40">40 minuti</option>
                        <option value="60">1 ora</option>
                        <option value="120">2 ore</option>
                        <option value="esame">esame</option>
                        <option value="trascinamento">trascinamento</option>
                </select>
            </div>
            <div class="field">
                <button type="button" id="createCode">Genera Codice</button>
            </div>
            <div class="field">
                <label for="code">Codice:</label>
                <input type="text" name="code" id="code" readonly required>
            </div>
            <div class="field">
                <button type="submit" >Attiva codici</button>
            </div>
            <label style="color: #fff;" id="prezzoTotale" data-prezzo="<%= pricePerHour.prezzo %>"></label>
        </form>
    </div>
    <script>
        document.getElementById("createCode").addEventListener("click", function() {
            var totCodes = document.getElementById("totaleCodici").value;
            let codici = [];
            for(var i = 0; i < totCodes; i++){


                var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
                var codeLength = 10;
                var generatedCode = '';
                for (var j = 0; j < codeLength; j++) {
                    generatedCode += characters.charAt(Math.floor(Math.random() * characters.length));
                }
                codici.push(generatedCode);
            }
            codici.join(' , ')
            document.getElementById("code").value = codici;
            const prezzoTotLabel = document.getElementById('prezzoTotale');
            const durata = document.getElementById('durata').value;
            if(durata == 'esame'){
                prezzoTotLabel.innerText = "Il prezzo totale è di " + totCodes * 100 + "€";
            }else if(durata == 'trascinamento'){
                prezzoTotLabel.innerText = "Il prezzo totale è di " + totCodes * 150 + "€";
            }else{
                const prezzoOra =Number(prezzoTotLabel.dataset.prezzo);
                prezzoTotLabel.innerText = "Il prezzo totale è di " + totCodes * (prezzoOra * (Number(durata)/60)) + "€";
            }
        });

        document.getElementById('createCodeForm').addEventListener('submit', function(event) {
            var codeInput = document.getElementById('code');
            if (codeInput.value.trim() === '') {
                event.preventDefault();
                alert('Il campo del codice è obbligatorio.');
            }
        });
    </script>
    <div class="tableContainer">
    <table>
        <thead>
            <tr>
                <th>N.</th>
                <th>Allievo</th>
                <th>Email</th>
                <th>Cellulare</th>
                <th>Esami pagati</th>
                <th>Guide</th>
                <th>Limitazioni</th>
                <th>Boccia</th>
                <th>Fatture</th>
            </tr>
        </thead>
        <tbody id="usersTableBody">

                <% let enumeration = 1; %>
                <% for (let i = 0; i < utenti.length; i++) { %>
                    <tr class="allievi <%= utenti[i].archiviato ? 'archiviato' : '' %>" data-archiviato="<%= utenti[i].archiviato %>">
                        <% let nomeAllievo = utenti[i].billingInfo[0].cognome + ' ' + utenti[i].billingInfo[0].nome %>
                        <% let codice = utenti[i].codicePagamento.length + '/' + (!utenti[i].totalCodes ? 0 : utenti[i].totalCodes)  %>
                        <td data-label="N"><span><%= !utenti[i].archiviato ? enumeration++ : ''  %></span></td>
                        <td data-label="Allievo" >
                            <div class="nameCell">
                                <% if (utenti[i].trascinamento.attivo) { %>
                                    <span class="material-symbols-outlined <%= utenti[i].trascinamento.pagato ? 'trascPagato' : 'trascNonPagato' %>">
                                        drag_click
                                    </span>
                                <% } %>
                                <% if (utenti[i].perfezionamento) { %>
                                    <span class="material-symbols-outlined perfezionamento">
                                        upgrade
                                    </span>
                                <% } %>

                                <a class="nameModal" data-nomeallievo="<%= nomeAllievo %>" data-email="<%= utenti[i].email %>" data-codici="<%= JSON.stringify(utenti[i].codicePagamento) %>" data-codes="<%= codice %>" href="">
                                    <span><%= nomeAllievo %></span>
                                </a>
                            </div>
                        </td>
                        <td data-label="Email" data-email="<%= utenti[i].email %>"><span><%= utenti[i].email %></span></td>
                        <td data-label="Cellulare"><span><%= utenti[i].cell %></span></td>
                            <td data-label="Esami pagati"> 
                                <span>
                                    <% let totEsami = utenti[i].exams.length; %>
                                    <% if (utenti[i].exams[totEsami-1] == true) { %>
                                        <%= totEsami %>
                                    <% }else{%>
                                        <%= totEsami - 1 %>
                                    <% } %>
                                </span>
                            </td>
                            <td data-label="Guide"> <button class="tableBtn"><a href=" <%=`/admin/guideSvolte/:${utenti[i].userName}` %>" >Ore lezioni</a></button></td>
                            <td data-label="Limitazioni"> <button class="limitation tableBtn" data-student="<%= utenti[i].userName %>" data-exclude="<%= JSON.stringify(utenti[i].exclude.map(exclude => exclude.instructor)) %>">limita istruttori</button></td>
                            <td data-label="Boccia"> <button class="boccia tableBtn" data-student="<%= utenti[i].userName %>" data-esame="<%= JSON.stringify(utenti[i].exams) %>">Boccia</button></td>
                            <td data-label="Fatture">
                                <% let noFatture = true %>
                                <% for(const fattura of utenti[i].fatturaDaFare) { %>
                                    <% if (!fattura.emessa) { %>
                                        <a href=" <%= `/admin/fatture/${utenti[i].userName}` %> ">
                                            <span class="material-symbols-outlined" style="color: orange;">
                                                receipt_long
                                            </span>
                                        </a>
                                        <% noFatture = false %>
                                        <% break; %>
                                    <% } %>
                                <% } %>
                                <% if (noFatture) { %>
                                    <a href=" <%= `/admin/pagamenti?id=${utenti[i]._id}` %> ">
                                        <span class="material-symbols-outlined" style="color: rgb(18, 161, 209);">
                                            payments
                                        </span>
                                    </a>
                                <% } %>
                            </td>
                        </tr>
                <% } %>
        </tbody>
    </table>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>
    document.addEventListener('DOMContentLoaded', () => {
    const nameFilter = document.getElementById('searchName');
    const phoneFilter = document.getElementById('searchPhone');
    const emailFilter = document.getElementById('searchEmail');
    const examsFilter = document.getElementById('searchExams');
    const archivedFilter = document.getElementById('searchArchived');
    const tableBody = document.getElementById('usersTableBody');
    const rows = tableBody.getElementsByTagName('tr');


    const filterTable = () => {
        const name = nameFilter.value.toLowerCase();
        const email = emailFilter.value.toLowerCase();
        const phone = phoneFilter.value.toLowerCase();
        const exams = examsFilter.value;
        const archived = archivedFilter.checked;
        let enumeration = 1;
        for (let i = 0; i < rows.length; i++) {
            const row = rows[i];
            const numTd = row.getElementsByTagName('td')[0].textContent.toLowerCase();
            const nomeTd = row.getElementsByTagName('td')[1].textContent.toLowerCase().trim();
            const emailTd = row.getElementsByTagName('td')[2].textContent.toLowerCase();
            const phoneTd = row.getElementsByTagName('td')[3].textContent.toLowerCase();
            const examsTd = row.getElementsByTagName('td')[4].textContent.toLowerCase().trim();
            const isArchived = row.dataset.archiviato == 'true';
            if (
                (name === '' || nomeTd.includes(name)) &&
                (email === '' || emailTd.includes(email)) &&
                (phone === '' || phoneTd.includes(phone)) &&
                (exams === '' || examsTd == exams) &&
                ((archived && isArchived) || (!archived && !isArchived))
            ) {
                row.getElementsByTagName('td')[0].innerText = enumeration++;
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        }
    }

    nameFilter.addEventListener('input', filterTable);
    phoneFilter.addEventListener('input', filterTable);
    emailFilter.addEventListener('input', filterTable);
    examsFilter.addEventListener('input', filterTable);
    archivedFilter.addEventListener('input', filterTable); 
});
</script>

<script>
document.getElementById('copiaEmail').addEventListener('click', function() {
    var visibleEmailRows = document.querySelectorAll('tr:not([style*="display:none"])');

    var visibleEmails = [];

    visibleEmailRows.forEach(function(row) {
        var td = row.querySelector('td[data-label="Email"]');
        if (td && (td.offsetWidth > 0 || td.offsetHeight > 0)) {
            visibleEmails.push(td.dataset.email);
        }
    });

    var emailsString = visibleEmails.join(', ');

    navigator.clipboard.writeText(emailsString).then(function() {
        alert('Indirizzi email visibili copiati negli appunti: ' + emailsString);
    }).catch(function(err) {
        console.error('Errore durante la copia negli appunti:', err);
    });
});

</script>


    </div>
    <div class="containerModal">
    <div class="actionsModal">
        <a href=" " class="close">
            <span class="material-symbols-outlined">
                cancel
            </span>
        </a>
        <table class="panoramicaCodiciTable">
            <thead>
                <tr>
                    <th id="codiciTh">Codici</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td data-label="Codici" id="codiciRimanenti"></td>
                </tr>
            </tbody>
        </table>
        <table>
            <thead>
                <tr>
                    <th>Codice</th>
                    <th>Data</th>
                    <th>Importo</th>
                </tr>
            </thead>
            <tbody class="codiciBody">

            </tbody>
        </table>
        <table class="archiviaTable">
            <thead>
                <tr>
                    <th>Archivia</th>
                    <th>Perfezionamento</th>
                    <th>Trascinamento</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td data-label="Archivia" >
                        <a href="" id="archivia">
                            <span class="material-symbols-outlined">
                                archive
                            </span>
                        </a>
                    </td>
                    <td>
                        <form action="/perfezionamento" id="perfezionamentoForm" method="POST">
                            <input type="hidden" name="email" id="emailPerfezionamento" value="">
                            <button class="tableBtn" id="perfezionamentoSubmit" type="submit">Perfezionamento</button>
                        </form>
                    </td>
                    <td>
                        <form action="/admin/trascinamento" id="trascinamentoForm" method="POST">
                            <input type="hidden" name="email" id="emailTrascinamento" value="">
                            <button class="tableBtn" type="submit">Trascinamento</button>
                        </form>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<script>
    document.getElementById('perfezionamentoForm').addEventListener('submit', function(event) {
        const confirmSubmission = confirm("Sei sicuro di voler procedere con il perfezionamento?");
        if (!confirmSubmission) {
            event.preventDefault();
        }
    });
    document.getElementById('trascinamentoForm').addEventListener('submit', function(event) {
        const confirmSubmission = confirm("Sei sicuro di voler procedere con il trascinamento?");
        if (!confirmSubmission) {
            event.preventDefault();
        }
    });
</script>

    <script>
        const nameModal = document.querySelectorAll('.nameModal');
        const codiciRimanentiLabel = document.getElementById('codiciRimanenti');
        const codiciTh = document.getElementById('codiciTh');
        const containerModal = document.querySelector('.containerModal');
        const archivia = document.getElementById('archivia');
        const emailPerfezionamento = document.getElementById('emailPerfezionamento');
        const emailTrascinamento = document.getElementById('emailTrascinamento');
        const codiciBody = document.querySelector('.codiciBody');
        nameModal.forEach((name)=>{
            name.addEventListener('click', (event) =>{
                event.preventDefault();
                codiciBody.innerHTML = '';
                containerModal.style.display = 'block';
                const codes = name.dataset.codes;
                const nome = name.dataset.nomeallievo;
                const email = name.dataset.email;
                const codici = JSON.parse(name.dataset.codici);
                codici.forEach(codice => {
                    const row = document.createElement('tr');
                    
                    const codiceCell = document.createElement('td');
                    codiceCell.setAttribute('data-label', 'Codice');
                    codiceCell.textContent = codice.codice;
                    row.appendChild(codiceCell);
                    
                    const dataCell = document.createElement('td');
                    dataCell.setAttribute('data-label', 'Data');
                    dataCell.textContent = codice.data;
                    row.appendChild(dataCell);

                    const importoCell = document.createElement('td');
                    importoCell.setAttribute('data-label', 'Importo');
                    importoCell.textContent = (codice.importo).toFixed(2) + '€';
                    row.appendChild(importoCell);
                    
                    codiciBody.appendChild(row);
                });
                codiciRimanentiLabel.dataset.label = 'Codici di ' + nome;
                codiciTh.innerText = 'Codici di ' + nome;
                codiciRimanentiLabel.innerText = (codes == '0/0' ? 'Nessun Codice Attivo' : codes);
                archivia.dataset.email = email;
                emailPerfezionamento.value = email;
                emailTrascinamento.value = email;
                
            });
        });
        archivia.addEventListener('click', function(event) {
            event.preventDefault();
            if(confirm(`Sei sicuro di voler archiviare questo allievo?`)){
                const email = archivia.dataset.email;
                fetch('/ArchiviaUtente', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({email: email})
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Errore durante la richiesta POST');
                    }

                    return response.json();
                })
                .then(data => {
                    alert(data);
                    window.location.reload();
                })
                .catch(error => {
                    console.error('Si è verificato un errore:', error);
                });
            }
        });


    </script>

        <div id="formContainer" style="display: none;">
            <a href=" ">
                <span class="material-symbols-outlined">
                    cancel
                </span>
            </a>
            <div class="limitationButtons">
                <button id="activateExcludeForm">Aggiungi limitazioni</button>
                <button id="activateIncludeForm">Rimuovi limitazioni</button>
            </div>
            <form action="/excludeInstructor" id="excludeForm" class="form" method="POST" style="display: none;">
                <h2>Istruttori esclusi</h2>
                <input type="hidden" name="student" class="studentInput" id="excludeStudentInput" value="">
                <% for( let i = 0; i < istruttori.length; i++ ) { %>
                    <div class="instructorInput">
                        <label for="<%= istruttori[i].nome %> <%= istruttori[i].cognome %>"><%= istruttori[i] %> <%= istruttori[i].cognome %></label>
                        <input type="checkbox" class="instructorCheckBox" name="istruttori" value="<%= istruttori[i] %>">
                    </div>
                <% } %>
                <button type="submit">Conferma</button>
            </form>
            <form action="/includeInstructor" id="includeForm" class="form" method="POST" style="display: none;">
                <h2>Istruttori inclusi</h2>
                <input type="hidden" name="student" class="studentInput" id="includeStudentInput" value="">
                <% for( let i = 0; i < istruttori.length; i++ ) { %>
                    <div class="instructorInput">
                        <label for="<%= istruttori[i].nome %> <%= istruttori[i].cognome %>"><%= istruttori[i] %> <%= istruttori[i].cognome %></label>
                        <input type="checkbox" class="instructorCheckBox" name="istruttori" value="<%= istruttori[i] %>">
                    </div>
                <% } %>
                <button type="submit">Conferma</button>
            </form>
        </div>
        <script>
            const istruttori = Array('<%= istruttori %>');
            const limitationBtn = document.querySelectorAll('.limitation');
            const container = document.getElementById('formContainer');
            const excludeStudentInput = document.getElementById('excludeStudentInput');
            const includeStudentInput = document.getElementById('includeStudentInput');
            const excludeForm = document.getElementById('excludeForm');
            const includeForm = document.getElementById('includeForm');
            const activateExcludeForm = document.getElementById('activateExcludeForm');    
            const activateIncludeForm = document.getElementById('activateIncludeForm');
            const instructorCheckBox = document.querySelectorAll('.instructorCheckBox');
            let excludedInstructors;
            limitationBtn.forEach(btn => {
                btn.addEventListener('click', () =>{
                    let student = btn.dataset.student;
                    excludedInstructors = JSON.parse(btn.dataset.exclude);
                    includeStudentInput.value = student;
                    excludeStudentInput.value = student;
                    container.style.display = "flex";
                    // Preseleziona i checkbox degli istruttori esclusi
                    
                });
            });

            activateExcludeForm.addEventListener('click', () =>{
                excludeForm.style.display = 'flex';
                includeForm.style.display = 'none';
                instructorCheckBox.forEach(checkbox => {
                    const instructorName = checkbox.value;
                    var label = checkbox.parentNode;
                    if (excludedInstructors.includes(instructorName)) {
                        label.style.color = 'red';
                        checkbox.checked = true;
                        checkbox.disabled = true;
                    } else {
                        label.style.color = 'green';
                        checkbox.checked = false;
                        checkbox.disabled = false;
                    }
                }); 
            });
            activateIncludeForm.addEventListener('click', () =>{
                includeForm.style.display = 'flex';
                excludeForm.style.display = 'none';
                instructorCheckBox.forEach(checkbox => {
                    const instructorName = checkbox.value;
                    var label = checkbox.parentNode;
                    if (excludedInstructors.includes(instructorName)) {
                        label.style.color = 'red';
                        checkbox.checked = false;
                        checkbox.disabled = false;
                    } else {
                        label.style.color = 'green';
                        checkbox.checked = true;
                        checkbox.disabled = true;
                    }
                }); 
            });


            document.querySelectorAll('.boccia').forEach(button => {
    button.addEventListener('click', () => {
        const dataEsame = button.dataset.esame;
        const esami = JSON.parse(dataEsame);
        let posizioneBocciato;

        for (let i = 0; i < esami.length; i++) {
            const esame = esami[i];
            if (esame.paid && !esame.bocciato) {
                posizioneBocciato = i;
                break;
            }
        }
        const studente = button.dataset.student;
        if (confirm(`Sei sicuro di voler bocciare ${studente}?`)) {
            fetch('/boccia', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ studente, posizioneBocciato })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Errore nella richiesta');
                }
                return response.json();
            })
            .then(data => {
                alert(data);
                window.location.reload();
            })
            .catch(error => {
                console.error('Si è verificato un errore:', error);
            });
        }
        
    });
});
        </script>
</body>
</html>
