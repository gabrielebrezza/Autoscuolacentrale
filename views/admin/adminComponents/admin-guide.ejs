<!-- admin-guides.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/adminguides.css">
    <!-- icone -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <title><%= title %></title>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
</head>
<body>
    <%- include('header.ejs') %>
        <div id="data" name="data"></div>


    
        <div id="lezioni-disponibili">
            <% for(let i = 0; i < guides.length; i++) { %>
                <% const guide = guides[i]; %>
                <% let dateElaborate = []; %>
                <% if (role.role == 'Super' || guide.instructor === istruttore) { %>
                    <% for(let j = 0; j < guide.book.length; j++) { %>
                        <% let anyBooking = false; %>
                        <% const dateString = guide.book[j].day; %>
                        <% if (!dateElaborate.includes(dateString)) { %>
                            <% dateElaborate.push(dateString); %>
                            <div class="day-card" data-date="<%= dateString %>" style="display: none;">
                                <h2 class="day-title">Giorno: <%= dateString %></h2>
                                <div class="guide-info">
                                    <h3 class="guide-name">Istruttore: <%= guide.instructor %></h3>
                                    <table class="guide-table">
                                        <thead>
                                            <tr>
                                                <th>Ora</th>
                                                <th>Prenotata</th>
                                                <th>Azioni</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% for(let k = 0; k < guide.book[j].schedule.length; k++) { %>
                                                <% const schedule = guide.book[j].schedule[k]; %>
                                                <tr>
                                                    <td><%= schedule.hour %></td>
                                                    <td>
                                                        <% if (schedule.student) { %>
                                                            <span class="si">schedule.student</span>
                                                        <% } else { %>
                                                            <span class="no">Non Prenotata</span>
                                                        <% } %>
                                                    </td>
                                                    <td>
                                                        <% if (!schedule.student) { %>
                                                            <span class="material-symbols-outlined deleteGuide" data-instructor="<%= guide.instructor %>" data-time="<%= guide.book[j].day %> - <%= schedule.hour %>">delete</span>
                                                        <% } else { %>
                                                            <% for (let n = 0; n < infos.length; n++) { %>
                                                                <% if (infos[n].userName === schedule.student) { %>
                                                                    <span class="material-symbols-outlined userInfo" data-student="<%= infos[n].userName %>" data-email="<%= infos[n].email %>" data-cell="<%= infos[n].cell %>">info</span>
                                                                <% } %>
                                                            <% } %>
                                                            <% anyBooking = true; %>
                                                        <% } %>
                                                    </td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                    <% if (!anyBooking) { %>
                                        <button  class="deleteAllGuides" data-instructor="<%= guide.instructor %>" data-time="<%= guide.book[j].day %>">Elimina tutte</button>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    <% } %>
                <% } %>
            <% } %>
        </div>
        
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                const deleteButton = document.querySelectorAll(".deleteAllGuides");
        
                deleteButton.forEach((btn)=>{
                btn.addEventListener("click", function() {
                    const instructor = btn.dataset.instructor;
                    const time = btn.dataset.time;
                    fetch('/deleteAllGuides', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ instructor: instructor, time: time})
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Success:', data);
                        alert('Tutte le guide del giorno ' + time + ' sono state eliminate con successo');
                        window.location.reload();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Errore nell\'eliminazione di tutte le guide del giorno ' + time);
                    });
                });
            });
        });
        </script>
                
    
<script>
$(function() {
    $("#data").datepicker({
        dateFormat: 'dd/mm/yy',
        minDate: 0, // oggi
        beforeShowDay: function(date) {
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();
            // Formattazione data
            var dateString = (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year;
            var sectionExists = $('.day-card[data-date="' + dateString + '"]').length > 0;
            if (sectionExists) {
                return [true, "greenDate", "Ci sono guide libere"];
            } else {
                return [true, "redDate disabled", "Non ci sono guide libere"];
            }
        },
        onSelect: function(dateText, inst) {
            updateSectionsVisibility(dateText); // Chiamiamo la funzione updateSectionsVisibility quando la data viene selezionata
        }
    });

    // Selezioniamo la prima data verde all'avvio della pagina
    selectFirstGreenDate();
});

function selectFirstGreenDate() {
    var firstGreenDateStr = $('.greenDate > a').data("date");
    if (firstGreenDateStr) {       
        $("#data").datepicker("setDate", firstGreenDateStr);
        updateSectionsVisibility(firstGreenDateStr); // Aggiorniamo la visibilit√† delle sezioni quando viene selezionata la prima data verde
    } else {
        console.log("Nessuna data greenDate trovata.");
    }
}

function updateSectionsVisibility(selectedDate) {
    var sections = document.querySelectorAll('.day-card');
    sections.forEach(function (section) {
        if (section.getAttribute('data-date') === selectedDate) {
            section.style.display = 'block';
        } else {
            section.style.display = 'none';
        }
    });
}
        </script>

        <div id="infosContainer" style="display: none;">
            <h2>info allievo</h2>
            <div class="field">
                <h3>Email:</h3>
                <p id="inputEmail"></p>
            </div>
            <div class="field">
                <h3>Cell:</h3>
                <p id="inputCell"></p>
            </div>
        </div>
            
        <script>
            const deleteBtn = document.querySelectorAll('.deleteGuide');
            deleteBtn.forEach((btn) => {
                btn.addEventListener('click', () =>{
                    const deleteInstructor = btn.dataset.instructor;
                    const deleteTime = btn.dataset.time;
                fetch('/adminRemovebooking', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ instructor: deleteInstructor, time: deleteTime})
                })
                .then(response => {
                    if (response.ok) {
                        alert('Lezione di guida rimossa con successo');
                    } else {
                        alert('Errore durante la rimozione della lezione di guida');
                    }
                    window.location.reload();
                })
                .catch(error => {
                    console.error('Errore durante la rimozione della lezione di guida:', error);
                });
            });
            });


            const userInfo = document.querySelectorAll('.userInfo');
            const infosContainer = document.getElementById('infosContainer');
            const inputEmail = document.getElementById('inputEmail');
            const inputCell = document.getElementById('inputCell');
            userInfo.forEach((btn) =>{
                btn.addEventListener('click', () =>{
                    const email = btn.dataset.email;
                    const cell = btn.dataset.cell;
                    inputEmail.innerText = email;
                    inputCell.innerText = cell;
                    infosContainer.style.display = 'flex';
                });
            });
        </script>

</body>
</html>
