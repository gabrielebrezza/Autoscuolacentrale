<!-- admin-guides.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/adminguides.css">
    <!-- icone -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <title>
        <%= title %>
    </title>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
</head>

<body>
    <%- include('header.ejs') %>
        <main>
            <div id="data" name="data"></div>


            <% const notBookedLessons = []; %>
                <div id="lezioni-disponibili">
                    <% for(let i = 0; i < guides.length; i++) { %>
                        <% const guide = guides[i]; %>
                            <% let dateElaborate = []; %>
                                <% for(let j = 0; j < guide.book.length; j++) { %>
                                    <% let anyBooking = false; %>
                                        <% const dateString = guide.book[j].day; %>

                                            <% if (!dateElaborate.includes(dateString)) { %>
                                                <% dateElaborate.push(dateString); %>
                                                    <div class="day-card" data-date="<%= dateString %>" style="display: none;">
                                                        <h2 class="day-title">Giorno:
                                                            <%= dateString %>
                                                        </h2>
                                                        <div class="guide-info">
                                                            <h3 class="guide-name">Istruttore:
                                                                <%= guide.instructor %>
                                                            </h3>
                                                            <table class="guide-table">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Ora</th>
                                                                        <th>Prenotata</th>
                                                                        <% if (role.role == 'Super' || guide.instructor === istruttore) { %>
                                                                            <th>Azioni</th>
                                                                            <% } %>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <% const sortedSchedule = guide.book[j].schedule.sort((a, b) => {
                                            return a.hour.localeCompare(b.hour); // Ordina le ore in ordine alfabetico (se sono stringhe)
                                        }); %>
                                                                        <% for(let k = 0; k < sortedSchedule.length; k++) { %>
                                                                            <% const schedule = sortedSchedule[k]; %>
                                                                                <tr>
                                                                                    <td>
                                                                                        <%= schedule.hour %>
                                                                                    </td>
                                                                                    <td>
                                                                                        <% if (schedule.student) { %>
                                                                                            <% if (role.role == 'Super' || guide.instructor === istruttore) { %>
                                                                                                <% for (let n = 0; n < infos.length; n++) { %>
                                                                                                    <% if (infos[n].userName === schedule.student) { %>
                                                                                                        <% const utente = infos[n].billingInfo[0].cognome + ' ' + infos[n].billingInfo[0].nome %>
                                                                                                            <% if (role.role == 'Super' || guide.instructor === istruttore) { %>
                                                                                                                <a href="/admin/pagamenti?id=<%=infos[n]._id%>">
                                                                                                                    <% } %>
                                                                                                                        <span class="si" title="<%= utente %>"><%= utente %></span>
                                                                                                                        <% if (role.role == 'Super' || guide.instructor === istruttore) { %>
                                                                                                                </a>
                                                                                                                <% } %>
                                                                                                                    <% } %>
                                                                                                                        <% } %>
                                                                                                                            <% }else{ %>
                                                                                                                                <span class="si">Prenotata</span>
                                                                                                                                <% } %>
                                                                                                                                    <% } else { %>
                                                                                                                                        <% if (guide.instructor != 'Esame Guida') { %>
                                                                                                                                            <% notBookedLessons.push(`${guide.book[j].day} - ${schedule.hour} - ${guide.instructor}`) %>
                                                                                                                                                <% } %>
                                                                                                                                                    <span class="no">Non Prenotata</span>
                                                                                                                                                    <% } %>
                                                                                    </td>
                                                                                    <% if (role.role == 'Super' || guide.instructor === istruttore) { %>
                                                                                        <td>
                                                                                            <% if (!schedule.student) { %>
                                                                                                <span class="material-symbols-outlined deleteGuide" data-instructor="<%= guide.instructor %>" data-time="<%= guide.book[j].day %> - <%= schedule.hour %>">delete</span>
                                                                                                <% } else { %>
                                                                                                    <% for (let n = 0; n < infos.length; n++) { %>
                                                                                                        <% if (infos[n].userName === schedule.student) { %>
                                                                                                            <span class="material-symbols-outlined userInfo" data-student="<%= infos[n].userName %>" data-email="<%= infos[n].email %>" data-cell="<%= infos[n].cell %>">info</span>
                                                                                                            <span style="cursor: pointer; color: rgb(45, 45, 189);" data-instructor="<%= guide.instructor %>" data-student="<%= schedule.student %>" data-book="<%= guide.book[j]._id %>" data-schedule="<%= schedule._id %>" data-time="<%= guide.book[j].day %> - <%= schedule.hour %>"
                                                                                                                class="material-symbols-outlined move_date">
                                                                        edit_calendar
                                                                    </span>
                                                                                                            <% } %>
                                                                                                                <% } %>
                                                                                                                    <% anyBooking = true; %>
                                                                                                                        <% } %>
                                                                                        </td>
                                                                                        <% } %>
                                                                                </tr>
                                                                                <% } %>
                                                                </tbody>
                                                            </table>
                                                            <% if (!anyBooking) { %>
                                                                <% if (role.role == 'Super' || guide.instructor === istruttore) { %>
                                                                    <button style="cursor: pointer;" class="deleteAllGuides" data-instructor="<%= guide.instructor %>" data-time="<%= guide.book[j].day %>">Elimina tutte</button>
                                                                    <% } %>
                                                                        <% } %>
                                                        </div>
                                                    </div>
                                                    <% } %>
                                                        <% } %>
                                                            <% } %>
                </div>

                <div id="notBookedLessons" style="display: none;">
                    <%= notBookedLessons %>
                </div>
                <style>
                    #moveLessonForm {
                        position: fixed;
                        top: 50%;
                        left: 50%;
                        transform: translateY(-50%) translateX(-50%);
                        width: 500px;
                        padding: 25px;
                        pointer-events: none;
                        opacity: 0;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        flex-direction: column;
                        gap: 50px;
                        background: #5681a9;
                        color: #fff;
                        border-radius: 25px;
                        transition: .25s ease-in-out;
                    }
                    
                    #moveLessonForm.active {
                        pointer-events: all;
                        opacity: 1;
                    }
                    
                    .closeMoveLessonModal {
                        position: absolute;
                        right: 5px;
                        top: 5px;
                        cursor: pointer;
                    }
                    
                    .field {
                        display: flex;
                        gap: 10px;
                    }
                    
                    #moveLessonForm button {
                        padding: 10px;
                        cursor: pointer;
                        outline: none;
                        border: none;
                        background: #71a1cb;
                        color: #fff;
                        transition: .25s ease-in-out;
                    }
                    
                    #moveLessonForm button:hover {
                        transform: scale(1.2);
                    }
                </style>
                <form id="moveLessonForm" action="/admin/spostaLezione" method="POST">
                    <span class="material-symbols-outlined closeMoveLessonModal">
                        cancel
                    </span>
                    <h1>Sposta Lezione</h1>
                    <h3>Data Lezione Attuale: <span id="moveLessonFormDate"></span></h3>
                    <input type="hidden" name="duration">
                    <input type="hidden" name="student">
                    <input type="hidden" name="istruttore">
                    <input type="hidden" name="bookId">
                    <input type="hidden" name="scheduleId">
                    <input type="hidden" name="date">
                    <input type="hidden" name="hour">
                    <div class="field">
                        <label for="date">Nuova Lezione:</label>
                        <select name="newLesson" id="moveDateinputDate"></select>
                    </div>
                    <button type="submit">Conferma</button>
                </form>
                <script>
                    const moveLessonForm = document.getElementById('moveLessonForm');
                    document.querySelector('.closeMoveLessonModal').addEventListener('click', () => moveLessonForm.classList.remove('active'))
                    const moveDate = document.querySelectorAll('.move_date');
                    for (const btn of moveDate) {
                        btn.addEventListener('click', () => {

                            const date = btn.dataset.time.split(' - ')[0];
                            const hour = btn.dataset.time.split(' - ')[1];
                            const today = new Date().toISOString().split('T')[0];
                            const startHour = new Date(`${today}T${hour.split('-')[0]}:00`);
                            const endHour = new Date(`${today}T${hour.split('-')[1]}:00`);
                            const duration = (endHour - startHour) / 1000 / 60;
                            document.querySelector('[name="student"]').value = btn.dataset.student;
                            document.querySelector('[name="duration"]').value = duration;
                            document.querySelector('[name="date"]').value = date;
                            document.getElementById('moveLessonFormDate').innerText = btn.dataset.time;
                            document.querySelector('[name="istruttore"]').value = btn.dataset.instructor;
                            document.querySelector('[name="bookId"]').value = btn.dataset.book;
                            document.querySelector('[name="scheduleId"]').value = btn.dataset.schedule;
                            document.querySelector('[name="hour"]').value = hour;
                            populateDate(duration);
                            moveLessonForm.classList.add('active');
                        });
                    }

                    function populateDate(duration) {
                        const dates = document.getElementById('notBookedLessons').innerText.split(',');
                        for (let i = 0; i < dates.length; i++) {
                            const day = dates[i].split(' - ')[0].split('/').reverse().join('-');
                            if (new Date(day) < new Date()) {
                                dates.splice(i, 1);
                                i--;
                                continue;
                            }
                            const hour = dates[i].split(' - ')[1];
                            const today = new Date().toISOString().split('T')[0];
                            const startHour = new Date(`${today}T${hour.split('-')[0]}:00`);
                            const endHour = new Date(`${today}T${hour.split('-')[1]}:00`);
                            const elDuration = (endHour - startHour) / 1000 / 60;
                            if (duration != elDuration) {
                                dates.splice(i, 1);
                                i--;
                            }
                        }
                        let dateOptions = ''
                        for (const date of dates) {
                            dateOptions += `<option value="${date}">${date}</option>`
                        }
                        document.getElementById('moveDateinputDate').innerHTML = dateOptions;
                    }
                </script>



                <script>
                    document.addEventListener("DOMContentLoaded", function() {
                        const deleteButton = document.querySelectorAll(".deleteAllGuides");

                        deleteButton.forEach((btn) => {
                            btn.addEventListener("click", function() {
                                const instructor = btn.dataset.instructor;
                                const time = btn.dataset.time;
                                fetch('/deleteAllGuides', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                        body: JSON.stringify({
                                            instructor: instructor,
                                            time: time
                                        })
                                    })
                                    .then(response => {
                                        if (!response.ok) {
                                            throw new Error('Network response was not ok');
                                        }
                                        return response.json();
                                    })
                                    .then(data => {
                                        console.log('Success:', data);
                                        alert('Tutte le guide del giorno ' + time + ' sono state eliminate con successo');
                                        window.location.reload();
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        alert('Errore nell\'eliminazione di tutte le guide del giorno ' + time);
                                    });
                            });
                        });
                    });
                </script>


                <script>
                    $(function() {
                        $("#data").datepicker({
                            dateFormat: 'dd/mm/yy',
                            beforeShowDay: function(date) {
                                var day = date.getDate();
                                var month = date.getMonth() + 1;
                                var year = date.getFullYear();
                                // Formattazione data
                                var dateString = (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year;
                                var sectionExists = $('.day-card[data-date="' + dateString + '"]').length > 0;
                                if (sectionExists) {
                                    return [true, "greenDate", "Ci sono guide libere"];
                                } else {
                                    return [true, "redDate disabled", "Non ci sono guide libere"];
                                }
                            },
                            onSelect: function(dateText, inst) {
                                updateSectionsVisibility(dateText); // Chiamiamo la funzione updateSectionsVisibility quando la data viene selezionata
                            }
                        });

                        selectTodayOrFirstGreenDate();

                        function selectTodayOrFirstGreenDate() {
                            var today = new Date();
                            var day = today.getDate();
                            var month = today.getMonth() + 1;
                            var year = today.getFullYear();
                            var todayString = (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year;

                            var todayExists = $('.day-card[data-date="' + todayString + '"]').length > 0;

                            if (todayExists) {
                                $("#data").datepicker("setDate", todayString);
                                updateSectionsVisibility(todayString);
                            } else {
                                // Se oggi non è disponibile, seleziona la prima data verde
                                setTimeout(function() {
                                    $(".greenDate:first").trigger("click");
                                }, 100);
                            }
                        }
                    });

                    function updateSectionsVisibility(selectedDate) {
                        var sections = document.querySelectorAll('.day-card');
                        sections.forEach(function(section) {
                            if (section.getAttribute('data-date') === selectedDate) {
                                section.style.display = 'block';
                            } else {
                                section.style.display = 'none';
                            }
                        });
                    }
                </script>

                <div id="infosContainer" style="display: none;">

                    <h2>
                        info allievo
                        <a href=" ">
                            <span class="material-symbols-outlined">
                        cancel
                    </span>
                        </a>
                    </h2>
                    <div class="field">
                        <h3>Email:</h3>
                        <p id="inputEmail"></p>
                    </div>
                    <div class="field">
                        <h3>Cell:</h3>
                        <p id="inputCell"></p>
                    </div>
                </div>

                <script>
                    const deleteBtn = document.querySelectorAll('.deleteGuide');
                    deleteBtn.forEach((btn) => {
                        btn.addEventListener('click', () => {
                            const deleteInstructor = btn.dataset.instructor;
                            const deleteTime = btn.dataset.time;
                            fetch('/adminRemovebooking', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        instructor: deleteInstructor,
                                        time: deleteTime
                                    })
                                })
                                .then(response => {
                                    if (response.ok) {
                                        alert('Lezione di guida rimossa con successo');
                                    } else {
                                        alert('Errore durante la rimozione della lezione di guida');
                                    }
                                    window.location.reload();
                                })
                                .catch(error => {
                                    console.error('Errore durante la rimozione della lezione di guida:', error);
                                });
                        });
                    });


                    const userInfo = document.querySelectorAll('.userInfo');
                    const infosContainer = document.getElementById('infosContainer');
                    const inputEmail = document.getElementById('inputEmail');
                    const inputCell = document.getElementById('inputCell');
                    userInfo.forEach((btn) => {
                        btn.addEventListener('click', () => {
                            const email = btn.dataset.email;
                            const cell = btn.dataset.cell;
                            inputEmail.innerText = email;
                            inputCell.innerText = cell;
                            infosContainer.style.display = 'flex';
                        });
                    });
                </script>
                <script>
                    const nomi = document.querySelectorAll('.si');
                    nomi.forEach((nome) => {
                        if (nome.textContent.length > 21) {
                            nome.textContent = nome.textContent.slice(0, 21 - 2) + '..';
                        }
                    })
                </script>
        </main>
</body>

</html>